//- .loader
//-   .bouncing-loader
//-     div
//-     div
//-     div

//- Все примеси в этом файле должны начинаться c имени блока (field-text)
mixin field-text(props)
  //- Принимает:
  //-   props {
  //-     title: ''         {string} - текст с названием (выводится над полем)
  //-     hasJs: false      {bool}   - используется js или нет
  //-     isTextarea: false {bool}   - флаг input/textarea
  //-     hasError: false   {bool}   - показаль ошибку или нет
  //-     helpText: ''      {string} - пояснение под полем
  //-     mods: ''          {string} - модификаторы блока
  //-     val: ''           {string} - текст в поле
  //-     attrs:            {object} - любые атрибуты для input/textarea
  //-       type:           {string}
  //-       placeholder:    {string}
  //- Вызов:
        +field-text({
          title: 'Заголовок',
          hasJs: true,
          isTextarea: false,
          hasError: false,
          helpText: 'Текст ошибки или подсказка',
          mods: '',
          val: '',
          attrs: {
            name: 'text',
            placeholder: ''
          }
        })
  -
    if(typeof(props) === 'undefined') {
      var props = {};
    }
    var allMods = '';
    if(typeof(props.mods) !== 'undefined' && props.mods) {
      var modsList = props.mods.split(',');
      for (var i = 0; i < modsList.length; i++) {
        allMods = allMods + ' field-text--' + modsList[i].trim();
      }
    }
  label.field-text(class=allMods, class=(typeof(props.hasError) !== 'undefined' && props.hasError) ? 'has-error' : '', class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'j-field-text' : '')&attributes(attributes)
    if(typeof(props.title) !== 'undefined' && props.title)
      span.field-text__name(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-label' : '')!= props.title
        sup *
    span.field-text__input-wrap
      if(typeof(props.isTextarea) !== 'undefined' && props.isTextarea)
        textarea.field-text__input(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-input' : '')&attributes(props.attrs)= props.val
      else
        input.field-text__input(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-input' : '', type=(typeof(props.attrs) !== 'undefined' && props.attrs.type) ? props.attrs.type : 'text', value=props.val)&attributes(props.attrs)
      if(typeof(props.helpText) !== 'undefined' && props.helpText)
        span.field-text__help-text!= props.helpText
      block

//- Все примеси в этом файле должны начинаться c имени блока (field-checkbox)
mixin field-checkbox(props)
  //- Принимает:
  //-   props {
  //-     title: ''         {string} - текст рядом с чекбокскнопкой
  //-     isLink: false     {bool}   - является ли блок ссылкой
  //-     mods: ''          {string} - модификаторы обертки чекбокскнопки
  //-     attrs:            {object} - любые атрибуты для input
  //-       name:           {string}
  //-       checked:        {bool}
  //- Вызов:
        +field-checkbox({
          title: 'Чекбокскнопка',
          isLink: false,
          mods: '',
          attrs: {
            name: 'checkbox',
            checked: true,
          }
        })
  -
    if(typeof(props) === 'undefined') {
      var props = {};
    }
    var allMods = '';
    if(typeof(props.mods) !== 'undefined' && props.mods) {
      var modsList = props.mods.split(',');
      for (var i = 0; i < modsList.length; i++) {
        allMods = allMods + ' field-checkbox--' + modsList[i].trim();
      }
    }
  if(typeof(props.isLink) !== 'undefined' && props.isLink)
    a.field-checkbox.j-checked(class=allMods, class=(typeof(props.attrs.checked) !== 'undefined' && props.attrs.checked) ? 'checked' : '', class=(typeof(props.attrs.disabled) !== 'undefined' && props.attrs.disabled) ? 'disabled' : '', href="javascript:void(0)")&attributes(attributes)
      span.field-checkbox__span-input
      span.field-checkbox__label!= props.title
      block
  else
    label.field-checkbox(class=allMods)&attributes(attributes)
      input.field-checkbox__input(type="checkbox", name=(typeof(props.attrs.name) !== 'undefined' && props.attrs.name) ? props.attrs.name : 'checkbox')&attributes(props.attrs)
      span.field-checkbox__span-input
      span.field-checkbox__label!= props.title
      block

//- Все примеси в этом файле должны начинаться c имени блока (field-select)
mixin field-select(props, attrs, options)
  //- Принимает:
  //-   props: {
  //-     title: ''         {string} - название селекта
  //-     hasJs: false      {bool}   - используется js или нет
  //-     hasError: false   {bool}   - показаль ошибку или нет
  //-     helpText: ''      {string} - текст подсказки
  //-     mods: ''          {string} - модификаторы блока
  //-   attrs: {            {object} - атрибуты селекта
  //-     name: ''          {string}
  //-   options {array}
  //-     {object}
  //-       title: ''       {string} - текст пункта
  //-       attrs:          {object} - любые атрибуты пункта
  //-         value:        {string}
  //-     {object}
  //-       attrs:          {object} - любые атрибуты пункта
  //-         label:        {string}
  //-       child:          {array}  - потомки (если есть этот элемент, то его родитель — optgroup)
  //-         {object}
  //-           title: ''   {string}
  //-           attrs:      {object}
  //-             value:    {string}
  //-     {object}
  //-       title: ''       {string} - текст пункта
  //-       attrs:          {object} - любые атрибуты пункта
  //-         value:        {string}

  //- Вызов:
        +field-select(
          {
            title: 'Название',
            hasJs: true,
            hasError: false,
            helpText: 'Текст ошибки или подсказка',
            mods: ''
          },
          {
            name: 'select',
            id: 'select'
          },
          [
            {
              title: 'Название 2',
              attrs: {
                selected: true,
                hidden: true
              }
            },
            {
              title: 'Опция1',
              attrs: {
                value: '',
              }
            },
            {
              title: 'Опция2',
              attrs: {
                value: '',
              }
            },
          ]
        )
        +field-select(
          {
            title: 'Название',
            hasJs: true,
            hasError: false,
            helpText: 'Текст ошибки или подсказка',
            mods: ''
          },
          {
            name: '',
            id: ''
          },
          [
            {
              attrs: {
                label: 'Группа',
              },
              child: [
                {
                  title: 'Опция1',
                  attrs: {
                    value: 'val01',
                  }
                },
                {
                  title: 'Опция2',
                  attrs: {
                    value: 'val02',
                  }
                },
              ]
            },
            {
              title: 'Опция3',
              attrs: {
                value: 'val03',
              }
            }
          ]
        )
  -
    if(typeof(props) === 'undefined') {
      var props = {};
    }
    var allMods = '';
    if(typeof(props.mods) !== 'undefined' && props.mods) {
      var modsList = props.mods.split(',');
      for (var i = 0; i < modsList.length; i++) {
        allMods = allMods + ' field-select--' + modsList[i].trim();
      }
    }
  label.field-select(class=allMods, class=(typeof(props.hasError) !== 'undefined' && props.hasError) ? 'has-error' : '', class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'j-field-text' : '')&attributes(attributes)
    if(typeof(props.title) !== 'undefined' && props.title)
      span.field-select__name(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-label' : '')!= props.title
        sup *
    span.field-select__select-wrap
      select.field-select__select(class=(typeof(props.hasJs) !== 'undefined' && props.hasJs) ? 'css-input' : '')&attributes(attrs)
        each option in options
          //- option= option
          if(typeof(option.child) !== 'undefined' && option.child)
            optgroup(label=option.attrs.label)
              each subOption in option.child
                option&attributes(subOption.attrs)= subOption.title
          else if(typeof(option.title) !== 'undefined' && option.title)
            option&attributes(option.attrs)= option.title
      if(typeof(props.helpText) !== 'undefined' && props.helpText)
        span.field-select__help-text!= props.helpText

mixin ulFolder
  ul.ul-folder
    li.has-folder
      a(href="#!") Микроблейдинг
      i.icon-arrow-down
      ul.ul-folder
        li: a(href="#!") Татуаж бровей
        li: a(href="#!") Татуаж губ
        li: a(href="#!") Татуаж век
    li.has-folder
      a(href="#!") Татуаж
      i.icon-arrow-down
      ul.ul-folder
        li: a(href="#!") Татуаж бровей
        li: a(href="#!") Татуаж губ
        li: a(href="#!") Татуаж век
    li.has-folder
      a(href="#!") Удаление татуажа
      i.icon-arrow-down
      ul.ul-folder
        li: a(href="#!") Татуаж бровей
        li: a(href="#!") Татуаж губ
        li: a(href="#!") Татуаж век

#modal.modal.mfp-hide
  .modal__wrapper
    button(type="button").modal__close
    .modal__content
      .modal__head
        span.d-sm-none Обратный звонок
        span.d-none.d-sm-inline-block Заказать обратный звонок
      form(action="#")
        .form-group
          +field-text({
            title: '',
            hasJs: false,
            isTextarea: false,
            hasError: false,
            helpText: '',
            mods: '',
            val: '',
            attrs: {
              name: 'field-name',
              placeholder: 'Ваше имя',
            }
          })
        .form-group.mb20
          +field-text({
            title: '',
            hasJs: false,
            isTextarea: false,
            hasError: false,
            helpText: '',
            mods: '',
            val: '',
            attrs: {
              name: 'field-phone',
              placeholder: '+ 7-(___)-___-__-__',
              class: 'j-mask-local'
            }
          })
        .form-group.mb20
          +field-checkbox({
            title: 'Даю согласие на обработку персональных данных',
            isLink: false,
            mods: '',
            attrs: {
              name: 'field-checkbox',
              checked: false,
            }
          })
        button(type="button").btn.btn--block заказать звонок

  .clear100
  .modal__wrapper.--senks
    button(type="button").modal__close
    .modal__content
      .modal__head Cпасибо
      p Наш менеджер свяжется 
        br
        | с Вами в течении 5-10 минут